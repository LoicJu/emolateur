
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "leftADD_OPleftMUL_OPrightUMINUSADD_OP BOOL BOOLEAN CMP_OP ELSE EMO_CHECK EMO_CREEPY_SMILE EMO_CREEPY_SMILE_REVERSED EMO_CROSS EMO_PENCIL FALSE FOR IDENTIFIER IF IN MUL_OP NEWLINE NUM NUMBER PRINT STR STRING TRUE WHILE programme : statement\n        | statement line  programme : statement line programme  programme : line programme  statement : assignation\n        | structure\n        | declaration statement : PRINT expression  structure : WHILE expression '{' programme '}'  structure : IF expression '{' programme '}'  structure : IF expression '{' programme '}' ELSE '{' programme '}'  structure : FOR identifiant IN expression ',' expression ',' expression '{' programme '}'  structure : FOR NUM identifiant IN expression ',' expression ',' expression '{' programme '}'  identifiant : IDENTIFIER  line : NEWLINE expression : expression ADD_OP expression\n            | expression MUL_OP expression\n            | expression CMP_OP expressionexpression : NUMBER\n        | IDENTIFIER\n        | BOOLEAN expression : STRING expression : '(' expression ')'  expression : ADD_OP expression %prec UMINUS assignation : identifiant '=' expression  declaration : NUM identifiant '=' expression\n        | STR identifiant '=' expression\n        | BOOL identifiant '=' expression  structure : EMO_CHECK expression '{' programme '}'  structure : EMO_CHECK expression '{' programme '}' EMO_CROSS '{' programme '}'  statement : EMO_PENCIL expression "
    
_lr_action_items = {'PRINT':([0,3,9,19,45,46,50,74,77,83,87,],[7,7,-15,7,7,7,7,7,7,7,7,]),'EMO_PENCIL':([0,3,9,19,45,46,50,74,77,83,87,],[8,8,-15,8,8,8,8,8,8,8,8,]),'NEWLINE':([0,2,3,4,5,6,9,19,21,23,24,25,26,28,42,44,45,46,50,53,54,55,56,61,63,64,65,66,69,74,77,82,83,85,87,88,90,],[9,9,9,-5,-6,-7,-15,9,-8,-19,-20,-21,-22,-31,-24,-25,9,9,9,-16,-17,-18,-23,-26,-27,-28,-9,-10,-29,9,9,-11,9,-30,9,-12,-13,]),'WHILE':([0,3,9,19,45,46,50,74,77,83,87,],[11,11,-15,11,11,11,11,11,11,11,11,]),'IF':([0,3,9,19,45,46,50,74,77,83,87,],[12,12,-15,12,12,12,12,12,12,12,12,]),'FOR':([0,3,9,19,45,46,50,74,77,83,87,],[13,13,-15,13,13,13,13,13,13,13,13,]),'EMO_CHECK':([0,3,9,19,45,46,50,74,77,83,87,],[15,15,-15,15,15,15,15,15,15,15,15,]),'NUM':([0,3,9,13,19,45,46,50,74,77,83,87,],[14,14,-15,33,14,14,14,14,14,14,14,14,]),'STR':([0,3,9,19,45,46,50,74,77,83,87,],[16,16,-15,16,16,16,16,16,16,16,16,]),'BOOL':([0,3,9,19,45,46,50,74,77,83,87,],[17,17,-15,17,17,17,17,17,17,17,17,]),'IDENTIFIER':([0,3,7,8,9,11,12,13,14,15,16,17,19,22,27,29,33,39,40,41,45,46,47,49,50,51,52,60,67,72,74,75,77,80,83,87,],[18,18,24,24,-15,24,24,18,18,24,18,18,18,24,24,24,18,24,24,24,18,18,24,24,18,24,24,24,24,24,18,24,18,24,18,18,]),'$end':([1,2,4,5,6,9,19,20,21,23,24,25,26,28,38,42,44,53,54,55,56,61,63,64,65,66,69,82,85,88,90,],[0,-1,-5,-6,-7,-15,-2,-4,-8,-19,-20,-21,-22,-31,-3,-24,-25,-16,-17,-18,-23,-26,-27,-28,-9,-10,-29,-11,-30,-12,-13,]),'}':([2,4,5,6,9,19,20,21,23,24,25,26,28,38,42,44,53,54,55,56,57,58,61,62,63,64,65,66,69,78,81,82,85,86,88,89,90,],[-1,-5,-6,-7,-15,-2,-4,-8,-19,-20,-21,-22,-31,-3,-24,-25,-16,-17,-18,-23,65,66,-26,69,-27,-28,-9,-10,-29,82,85,-11,-30,88,-12,90,-13,]),'NUMBER':([7,8,11,12,15,22,27,29,39,40,41,47,49,51,52,60,67,72,75,80,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'BOOLEAN':([7,8,11,12,15,22,27,29,39,40,41,47,49,51,52,60,67,72,75,80,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'STRING':([7,8,11,12,15,22,27,29,39,40,41,47,49,51,52,60,67,72,75,80,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'(':([7,8,11,12,15,22,27,29,39,40,41,47,49,51,52,60,67,72,75,80,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'ADD_OP':([7,8,11,12,15,21,22,23,24,25,26,27,28,29,30,31,35,39,40,41,42,43,44,47,49,51,52,53,54,55,56,59,60,61,63,64,67,68,71,72,75,76,79,80,84,],[22,22,22,22,22,39,22,-19,-20,-21,-22,22,39,22,39,39,39,22,22,22,-24,39,39,22,22,22,22,-16,-17,39,-23,39,22,39,39,39,22,39,39,22,22,39,39,22,39,]),'=':([10,18,34,36,37,],[29,-14,49,51,52,]),'IN':([18,32,48,],[-14,47,60,]),'MUL_OP':([21,23,24,25,26,28,30,31,35,42,43,44,53,54,55,56,59,61,63,64,68,71,76,79,84,],[40,-19,-20,-21,-22,40,40,40,40,-24,40,40,40,-17,40,-23,40,40,40,40,40,40,40,40,40,]),'CMP_OP':([21,23,24,25,26,28,30,31,35,42,43,44,53,54,55,56,59,61,63,64,68,71,76,79,84,],[41,-19,-20,-21,-22,41,41,41,41,-24,41,41,-16,-17,41,-23,41,41,41,41,41,41,41,41,41,]),'{':([23,24,25,26,30,31,35,42,53,54,55,56,70,73,79,84,],[-19,-20,-21,-22,45,46,50,-24,-16,-17,-18,-23,74,77,83,87,]),')':([23,24,25,26,42,43,53,54,55,56,],[-19,-20,-21,-22,-24,56,-16,-17,-18,-23,]),',':([23,24,25,26,42,53,54,55,56,59,68,71,76,],[-19,-20,-21,-22,-24,-16,-17,-18,-23,67,72,75,80,]),'ELSE':([66,],[70,]),'EMO_CROSS':([69,],[73,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programme':([0,3,19,45,46,50,74,77,83,87,],[1,20,38,57,58,62,78,81,86,89,]),'statement':([0,3,19,45,46,50,74,77,83,87,],[2,2,2,2,2,2,2,2,2,2,]),'line':([0,2,3,19,45,46,50,74,77,83,87,],[3,19,3,3,3,3,3,3,3,3,3,]),'assignation':([0,3,19,45,46,50,74,77,83,87,],[4,4,4,4,4,4,4,4,4,4,]),'structure':([0,3,19,45,46,50,74,77,83,87,],[5,5,5,5,5,5,5,5,5,5,]),'declaration':([0,3,19,45,46,50,74,77,83,87,],[6,6,6,6,6,6,6,6,6,6,]),'identifiant':([0,3,13,14,16,17,19,33,45,46,50,74,77,83,87,],[10,10,32,34,36,37,10,48,10,10,10,10,10,10,10,]),'expression':([7,8,11,12,15,22,27,29,39,40,41,47,49,51,52,60,67,72,75,80,],[21,28,30,31,35,42,43,44,53,54,55,59,61,63,64,68,71,76,79,84,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programme","S'",1,None,None,None),
  ('programme -> statement','programme',1,'p_programme_statement','parserEmo.py',14),
  ('programme -> statement line','programme',2,'p_programme_statement','parserEmo.py',15),
  ('programme -> statement line programme','programme',3,'p_programme_recursive','parserEmo.py',20),
  ('programme -> line programme','programme',2,'p_programme_recursive_line','parserEmo.py',24),
  ('statement -> assignation','statement',1,'p_statement','parserEmo.py',28),
  ('statement -> structure','statement',1,'p_statement','parserEmo.py',29),
  ('statement -> declaration','statement',1,'p_statement','parserEmo.py',30),
  ('statement -> PRINT expression','statement',2,'p_statement_print','parserEmo.py',34),
  ('structure -> WHILE expression { programme }','structure',5,'p_structure','parserEmo.py',38),
  ('structure -> IF expression { programme }','structure',5,'p_cond_if','parserEmo.py',42),
  ('structure -> IF expression { programme } ELSE { programme }','structure',9,'p_cond_if_else','parserEmo.py',46),
  ('structure -> FOR identifiant IN expression , expression , expression { programme }','structure',11,'p_for','parserEmo.py',50),
  ('structure -> FOR NUM identifiant IN expression , expression , expression { programme }','structure',12,'p_for_decl','parserEmo.py',58),
  ('identifiant -> IDENTIFIER','identifiant',1,'p_identifiant','parserEmo.py',66),
  ('line -> NEWLINE','line',1,'p_newline','parserEmo.py',70),
  ('expression -> expression ADD_OP expression','expression',3,'p_expression_op','parserEmo.py',74),
  ('expression -> expression MUL_OP expression','expression',3,'p_expression_op','parserEmo.py',75),
  ('expression -> expression CMP_OP expression','expression',3,'p_expression_op','parserEmo.py',76),
  ('expression -> NUMBER','expression',1,'p_expression_num_or_var_or_bool','parserEmo.py',80),
  ('expression -> IDENTIFIER','expression',1,'p_expression_num_or_var_or_bool','parserEmo.py',81),
  ('expression -> BOOLEAN','expression',1,'p_expression_num_or_var_or_bool','parserEmo.py',82),
  ('expression -> STRING','expression',1,'p_expression_string','parserEmo.py',86),
  ('expression -> ( expression )','expression',3,'p_expression_paren','parserEmo.py',90),
  ('expression -> ADD_OP expression','expression',2,'p_minus','parserEmo.py',94),
  ('assignation -> identifiant = expression','assignation',3,'p_assign','parserEmo.py',98),
  ('declaration -> NUM identifiant = expression','declaration',4,'p_declaration','parserEmo.py',102),
  ('declaration -> STR identifiant = expression','declaration',4,'p_declaration','parserEmo.py',103),
  ('declaration -> BOOL identifiant = expression','declaration',4,'p_declaration','parserEmo.py',104),
  ('structure -> EMO_CHECK expression { programme }','structure',5,'p_emo_creepy_smile','parserEmo.py',110),
  ('structure -> EMO_CHECK expression { programme } EMO_CROSS { programme }','structure',9,'p_emo_creepy_smile_reversed','parserEmo.py',114),
  ('statement -> EMO_PENCIL expression','statement',2,'p_emo_pencil','parserEmo.py',118),
]
